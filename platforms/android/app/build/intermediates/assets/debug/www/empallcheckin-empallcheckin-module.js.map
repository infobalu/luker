{"version":3,"sources":["webpack:///./src/app/pages/empallcheckin/empallcheckin.module.ts","webpack:///./src/app/pages/empallcheckin/empallcheckin.page.html","webpack:///./src/app/pages/empallcheckin/empallcheckin.page.scss","webpack:///./src/app/pages/empallcheckin/empallcheckin.page.ts","webpack:///./src/app/services/api.service.ts"],"names":[],"mappings":"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","file":"empallcheckin-empallcheckin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmpallcheckinPage } from './empallcheckin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmpallcheckinPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EmpallcheckinPage]\n})\nexport class EmpallcheckinPageModule {}\n","module.exports = \"<!-- Default Segment -->\\n<ion-segment (ionChange)=\\\"segmentChanged($event)\\\">\\n\\n  <ion-segment-button value=\\\"today\\\" (click)='todaysCheckin()' checked>\\n    <ion-label>Today</ion-label>\\n  </ion-segment-button>\\n\\n  <ion-segment-button value=\\\"dealer\\\" (click)='dealerCheckin()'>\\n    <ion-label>Dealer</ion-label>\\n  </ion-segment-button>\\n  <ion-segment-button value=\\\"distributor\\\" (click)='distributorCheckin()'>\\n    <ion-label>Distributor</ion-label>\\n  </ion-segment-button>\\n</ion-segment>\\n\\n\\n<ion-header>\\n    <ion-toolbar text-center  class=\\\"red_header\\\">\\n        <ion-title>Check-ins</ion-title>\\n    </ion-toolbar>\\n  <!-- <ion-searchbar (ionInput)=\\\"getItems($event)\\\"></ion-searchbar>  -->\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-card class=\\\"card_list\\\" padding *ngFor=\\\"let album of activeCheckins\\\">\\n        <div class=\\\"card_top_bar\\\">\\n          <h1 class=\\\"card_title\\\">Sumesh</h1>\\n          <p class=\\\"text_muted\\\"> {{album.dealer_name}}</p>\\n        </div>\\n        <div class=\\\"card_bottom_bar\\\">\\n          <p class=\\\"text_dark\\\"> Mobile Number : {{album.dealer_name}}</p>\\n          <p class=\\\"text_dark\\\"> Location : {{album.dealer_name}}</p>\\n        </div>\\n      </ion-card>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VtcGFsbGNoZWNraW4vZW1wYWxsY2hlY2tpbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './../../services/api.service';\n\n@Component({\n  selector: 'app-empallcheckin',\n  templateUrl: './empallcheckin.page.html',\n  styleUrls: ['./empallcheckin.page.scss'],\n})\nexport class EmpallcheckinPage implements OnInit {\n  activeCheckins: any = [];\n  activeCheckinsDealer: any = [];\n  activeCheckinsDist: any = [];\n\n  constructor( private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.triggerAllCheckIns();\n  }\n\n  segmentChanged(ev: any) {\n    console.log('Segment changed : ', ev)\n  }\n\n  todaysCheckin() {\n    console.log(\"=TODAY=\")\n    this.triggerAllCheckIns();\n  }\n  dealerCheckin() {\n   \n\n    this.apiService.getData('/getAllCheckins/' + '2019-09-12').subscribe(result => {\n      if(result['success'] == 1){\n        this.activeCheckins = result['data'];\n        console.log(\"== this.getAllCheckins == : \"+  JSON.stringify(this.activeCheckins));\n        this.activeCheckins =  this.activeCheckins.filter(d => d.check_in_for == 'dealer');\n      }\n    });\n\n    \n    //console.log(\"=dealerCheckin= : \"+JSON.stringify(this.activeCheckinsDealer));\n  }\n  distributorCheckin() {\n    console.log(\"=distributorCheckin=\")\n    this.apiService.getData('/getAllCheckins/' + '2019-09-12').subscribe(result => {\n      if(result['success'] == 1){\n        this.activeCheckins = result['data'];\n        console.log(\"== this.getAllCheckins == : \"+  JSON.stringify(this.activeCheckins));\n        this.activeCheckins =  this.activeCheckins.filter(d => d.check_in_for == 'dist');\n      }\n    });\n\n    \n  }\n\n\n  triggerAllCheckIns(){\n\n    this.apiService.getData('/getAllCheckins/' + '2019-09-12').subscribe(result => {\n      if(result['success'] == 1){\n        this.activeCheckins = result['data'];\n        console.log(\"== this.getAllCheckins == : \"+  JSON.stringify(this.activeCheckins));\n      }\n    });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { HTTP } from '@ionic-native/http/ngx';\n\ndeclare var cordova;\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  baseURL = environment.service_URL;\n\n  constructor(private http: HttpClient,private cordovahttp: HTTP) { }\n\n  getData(url: string) {\n    console.log('=URL = : ' + this.baseURL + url);\n    return this.http.get(this.baseURL + url);\n  }\n\n  postData(url: string, params: any) {\n    console.log('=URL = : ' + this.baseURL + url);\n    console.log('=params = : ' + JSON.stringify(params));\n    return this.http.post(this.baseURL + url, params);\n  }\n\n  postApi(url: any, payload: any, header: any) {\n  //   this.cordovahttp.setHeader('':'')\n  //   payload.forEach((value,key) => {\n  //     console.log(key+\" \"+value)\n  //   });\n  //   return this.cordovahttp.post(url, payload, header);\n  // }\n  }\n\n}\n"],"sourceRoot":""}