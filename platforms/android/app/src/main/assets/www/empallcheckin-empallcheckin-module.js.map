{"version":3,"sources":["webpack:///./src/app/pages/empallcheckin/empallcheckin.module.ts","webpack:///./src/app/pages/empallcheckin/empallcheckin.page.html","webpack:///./src/app/pages/empallcheckin/empallcheckin.page.scss","webpack:///./src/app/pages/empallcheckin/empallcheckin.page.ts"],"names":[],"mappings":"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","file":"empallcheckin-empallcheckin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmpallcheckinPage } from './empallcheckin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmpallcheckinPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EmpallcheckinPage]\n})\nexport class EmpallcheckinPageModule {}\n","module.exports = \"<!-- Default Segment -->\\n<ion-segment (ionChange)=\\\"segmentChanged($event)\\\">\\n\\n  <ion-segment-button value=\\\"today\\\" (click)='todaysCheckin()' checked>\\n    <ion-label>Today</ion-label>\\n  </ion-segment-button>\\n\\n  <ion-segment-button value=\\\"dealer\\\" (click)='dealerCheckin()'>\\n    <ion-label>Dealer</ion-label>\\n  </ion-segment-button>\\n  <ion-segment-button value=\\\"distributor\\\" (click)='distributorCheckin()'>\\n    <ion-label>Distributor</ion-label>\\n  </ion-segment-button>\\n</ion-segment>\\n\\n\\n<ion-header>\\n    <ion-toolbar text-center  class=\\\"red_header\\\">\\n        <ion-title>Check-ins</ion-title>\\n    </ion-toolbar>\\n  <!-- <ion-searchbar (ionInput)=\\\"getItems($event)\\\"></ion-searchbar>  -->\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-card class=\\\"card_list\\\" padding *ngFor=\\\"let album of activeCheckins\\\" (click)=\\\"selectPack(album)\\\">\\n        <div class=\\\"card_top_bar\\\" *ngFor=\\\"let subitem of album.created_by\\\">\\n          <h1 class=\\\"card_title\\\">{{subitem.employee_name}}</h1>\\n          <p class=\\\"text_muted m_0\\\">Location :  {{album.checkin_loc}}</p>\\n        </div>\\n\\n        <div class=\\\"card_bottom_bar _timing\\\">\\n            <ion-row>\\n              <ion-col col-6 text-center style=\\\"border-right: 1px solid #eee\\\">\\n                <p class=\\\"text_muted\\\"> Checkin Time <br>\\n                  <span class=\\\"bold _text_high\\\"> {{album.checkin_time}}</span></p>\\n              </ion-col>\\n              <ion-col col-6 text-center>\\n                <p class=\\\"text_muted\\\"> Check out Time <br>\\n                  <span class=\\\"bold _text_high\\\"> {{album.checkout_time}}</span></p>\\n              </ion-col>\\n            </ion-row>\\n          </div>\\n      </ion-card>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VtcGFsbGNoZWNraW4vZW1wYWxsY2hlY2tpbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './../../services/api.service';\nimport * as moment from 'moment';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-empallcheckin',\n  templateUrl: './empallcheckin.page.html',\n  styleUrls: ['./empallcheckin.page.scss'],\n})\nexport class EmpallcheckinPage implements OnInit {\n  activeCheckins: any = [];\n  activeCheckinsDealer: any = [];\n  activeCheckinsDist: any = [];\n  internetstatus: any;\n\n  constructor( private apiService: ApiService, private router: Router) { }\n\n  ngOnInit() {\n    this.triggerAllCheckIns();\n  }\n\n  segmentChanged(ev: any) {\n    console.log('Segment changed : ', ev)\n  }\n\n  todaysCheckin() {\n    console.log(\"=TODAY=\")\n   // this.internetstatus = localStorage.getItem(\"internet\");\n   if (navigator.onLine) {\n      this.triggerAllCheckIns();\n    } else {\n      alert('Please check your internet connection');\n    }\n  }\n  dealerCheckin() {\n    let time = moment().format('YYYY-MM-DD');\n\n    this.apiService.getData('/getAllCheckins/' + time).subscribe(result => {\n      if(result['success'] == 1){\n        this.activeCheckins = result['data'];\n        console.log(\"== this.getAllCheckins == : \"+  JSON.stringify(this.activeCheckins));\n        this.activeCheckins =  this.activeCheckins.filter(d => d.check_in_for == 'Dealer');\n      }\n    });\n\n    \n    //console.log(\"=dealerCheckin= : \"+JSON.stringify(this.activeCheckinsDealer));\n  }\n  distributorCheckin() {\n    console.log(\"=distributorCheckin=\")\n    let time = moment().format('YYYY-MM-DD');\n    this.apiService.getData('/getAllCheckins/' + time).subscribe(result => {\n      if(result['success'] == 1){\n        this.activeCheckins = result['data'];\n        console.log(\"== this.getAllCheckins == : \"+  JSON.stringify(this.activeCheckins));\n        this.activeCheckins =  this.activeCheckins.filter(d => d.check_in_for == 'Distributor');\n      }\n    });\n\n    \n  }\n\n\n  triggerAllCheckIns(){\n\n    let time = moment().format('YYYY-MM-DD');\n\n    this.apiService.getData('/getAllCheckins/' +time).subscribe(result => {\n      if(result['success'] == 1){\n        this.activeCheckins = result['data'];\n        console.log(\"== this.getAllCheckins == : \"+  JSON.stringify(this.activeCheckins));\n      }\n    });\n  }\n\n  selectPack(pack) {\n\n    let navigateExtars: NavigationExtras = {\n      queryParams: {\n        _id: JSON.stringify(pack)\n      }\n\n    };\n    this.router.navigate(['checkindetail'], navigateExtars);\n  }\n\n}\n"],"sourceRoot":""}